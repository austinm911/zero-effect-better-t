/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "../zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
    "tables": {
        "account": {
            "name": "account",
            "columns": {
                "id": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "id">
                },
                "accountId": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "accountId">,
                    "serverName": "account_id"
                },
                "providerId": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "providerId">,
                    "serverName": "provider_id"
                },
                "userId": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "userId">,
                    "serverName": "user_id"
                },
                "accessToken": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "accessToken">,
                    "serverName": "access_token"
                },
                "refreshToken": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "refreshToken">,
                    "serverName": "refresh_token"
                },
                "idToken": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "idToken">,
                    "serverName": "id_token"
                },
                "accessTokenExpiresAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "accessTokenExpiresAt">,
                    "serverName": "access_token_expires_at"
                },
                "refreshTokenExpiresAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "refreshTokenExpiresAt">,
                    "serverName": "refresh_token_expires_at"
                },
                "scope": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "scope">
                },
                "password": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "password">
                },
                "createdAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "createdAt">,
                    "serverName": "created_at"
                },
                "updatedAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "account", "updatedAt">,
                    "serverName": "updated_at"
                }
            },
            "primaryKey": ["id"]
        },
        "postTags": {
            "name": "postTags",
            "columns": {
                "postId": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "postTags", "postId">,
                    "serverName": "post_id"
                },
                "tagId": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "postTags", "tagId">,
                    "serverName": "tag_id"
                }
            },
            "primaryKey": ["postId", "tagId"],
            "serverName": "post_tags"
        },
        "posts": {
            "name": "posts",
            "columns": {
                "id": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "id">
                },
                "title": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "title">
                },
                "content": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "content">
                },
                "authorId": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "authorId">,
                    "serverName": "author_id"
                },
                "published": {
                    "type": "boolean",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "published">
                },
                "createdAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "createdAt">,
                    "serverName": "created_at"
                },
                "updatedAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "posts", "updatedAt">,
                    "serverName": "updated_at"
                }
            },
            "primaryKey": ["id"]
        },
        "session": {
            "name": "session",
            "columns": {
                "id": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "id">
                },
                "expiresAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "expiresAt">,
                    "serverName": "expires_at"
                },
                "token": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "token">
                },
                "createdAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "createdAt">,
                    "serverName": "created_at"
                },
                "updatedAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "updatedAt">,
                    "serverName": "updated_at"
                },
                "ipAddress": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "ipAddress">,
                    "serverName": "ip_address"
                },
                "userAgent": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "userAgent">,
                    "serverName": "user_agent"
                },
                "userId": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "session", "userId">,
                    "serverName": "user_id"
                }
            },
            "primaryKey": ["id"]
        },
        "tags": {
            "name": "tags",
            "columns": {
                "id": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "tags", "id">
                },
                "name": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "tags", "name">
                },
                "createdAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "tags", "createdAt">,
                    "serverName": "created_at"
                }
            },
            "primaryKey": ["id"]
        },
        "user": {
            "name": "user",
            "columns": {
                "id": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "user", "id">
                },
                "name": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "user", "name">
                },
                "email": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "user", "email">
                },
                "emailVerified": {
                    "type": "boolean",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "user", "emailVerified">,
                    "serverName": "email_verified"
                },
                "image": {
                    "type": "string",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "user", "image">
                },
                "createdAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "user", "createdAt">,
                    "serverName": "created_at"
                },
                "updatedAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "user", "updatedAt">,
                    "serverName": "updated_at"
                }
            },
            "primaryKey": ["id"]
        },
        "verification": {
            "name": "verification",
            "columns": {
                "id": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "verification", "id">
                },
                "identifier": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "verification", "identifier">
                },
                "value": {
                    "type": "string",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "verification", "value">
                },
                "expiresAt": {
                    "type": "number",
                    "optional": false,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "verification", "expiresAt">,
                    "serverName": "expires_at"
                },
                "createdAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "verification", "createdAt">,
                    "serverName": "created_at"
                },
                "updatedAt": {
                    "type": "number",
                    "optional": true,
                    "customType": null as unknown as ZeroCustomType<typeof zeroSchema, "verification", "updatedAt">,
                    "serverName": "updated_at"
                }
            },
            "primaryKey": ["id"]
        }
    },
    "relationships": {}
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
